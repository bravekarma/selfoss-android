buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:0.11.+'
        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.+'
    }
}
apply plugin: 'android'
apply plugin: 'android-apt'

repositories {
    mavenCentral()
}

dependencies {
    compile 'com.android.support:support-v4:19.1.0'
    compile 'com.android.support:support-v13:19.1.0'
    compile 'com.googlecode.android-query:android-query:0.25.9'
	compile 'org.apache.commons:commons-lang3:3.1'
	compile 'org.springframework.android:spring-android-rest-template:1.0.1.RELEASE'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.2.2'
	compile 'com.j256.ormlite:ormlite-android:4.45'
    compile 'com.github.chrisbanes.actionbarpulltorefresh:library:0.9.3'
    compile 'com.etsy.android.grid:library:+'

    apt files('libs/androidannotations-with-codemodel-selfoss.jar')
    compile files('libs/androidannotations-api-selfoss.jar')
}

android {
    compileSdkVersion 19
    buildToolsVersion "19.1.0"

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 19
        versionCode 16
        versionName "0.5.0"
    }

    signingConfigs {
        release {
            storeFile file(project.rootDir.absolutePath+"/signature.jks")
            storePassword "***********"
            keyAlias "caksoylar"
            keyPassword "***********"
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
        }
    }

    packagingOptions {
        pickFirst 'META-INF/DEPENDENCIES.txt'
        pickFirst 'META-INF/LICENSE.txt'
        pickFirst 'META-INF/NOTICE.txt'
        pickFirst 'META-INF/NOTICE'
        pickFirst 'META-INF/LICENSE'
        pickFirst 'META-INF/DEPENDENCIES'
        pickFirst 'META-INF/notice.txt'
        pickFirst 'META-INF/license.txt'
        pickFirst 'META-INF/dependencies.txt'
        pickFirst 'META-INF/LGPL2.1'
    }
}

apt {
    arguments {
        logLevel 'warn'
        androidManifestFile variant.processResources.manifestFile
        resourcePackageName 'fr.ydelouis.selfoss'
    }
}

task askForPasswords << {
    def storePw = new String(System.console().readPassword("\n\nKeystore password: "))
    def keyPw = new String(System.console().readPassword("Key password: "))

    android.signingConfigs.release.storePassword = storePw
    android.signingConfigs.release.keyPassword = keyPw
}

tasks.whenTaskAdded { theTask ->
    if (theTask.name.equals("packageRelease")) {
        theTask.dependsOn "askForPasswords"
    }
}

task launchDebug(dependsOn: 'installDebug') << {
    "adb shell am start -n fr.ydelouis.selfoss/.activity.MainActivity_".execute()
}

task clearData << {
    "adb shell pm clear fr.ydelouis.selfoss".execute()
}
